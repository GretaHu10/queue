{"mappings":"AAAA,MAAM,UAAU,GAAG,CAAA,KAAK,GAAI;IACxB,OAAO;QACH,IAAI,EAAE,KAAK;QACX,IAAI,EAAE,IAAI;KACb,CAAA;CACJ;AAGD,MAAM,UAAU,GAAG,CAAA,KAAK,GAAI;IACxB,OAAO,UAAU,CAAC,KAAK,CAAC,CAAA;CAC3B;AACD,MAAM,UAAU,GAAG,CAAC,KAAI,EAAE,KAAK,GAAK;IAChC,MAAM,KAAI,GAAG,UAAU,CAAC,KAAK,CAAC;IAC9B,IAAI,CAAC,GAAG,KAAI;IACZ,MAAO,CAAC,CAAC,IAAI,CACT,CAAC,GAAG,CAAC,CAAC,IAAI;IAEd,CAAC,CAAC,IAAI,GAAG,KAAI;IACb,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;IACnB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC;IACjB,OAAO,KAAI,CAAA;CACd;AACD,MAAM,cAAc,GAAG,CAAC,KAAI,EAAE,KAAI,GAAK;IACnC,IAAI,CAAC,GAAG,KAAI;IACZ,IAAI,CAAC,GAAG,KAAI;IACZ,MAAO,CAAC,KAAK,KAAI,IAAI,CAAC,KAAK,IAAI,CAAE;QAC7B,CAAC,GAAG,CAAC;QACL,CAAC,GAAG,CAAC,CAAC,IAAI;KACb;IACD,IAAI,CAAC,KAAK,IAAI,EACV,OAAO,KAAK,CAAA;SACT,IAAI,CAAC,KAAK,CAAC,EAAE;QAChB,CAAC,GAAG,CAAC,CAAC,IAAI;QACV,OAAO,CAAC,CAAA;KACX,MAAM;QACH,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI;QACf,OAAO,KAAI,CAAA;KACd;CACJ;AAED,qCAAqC;AACrC,mBAAmB;AACnB,2BAA2B;AAC3B,gBAAgB;AAChB,qBAAqB;AACrB,QAAQ;AACR,IAAI;AAIJ,MAAM,IAAI,GAAG,UAAU,CAAC,EAAE,CAAC;AAC3B,MAAM,IAAI,GAAG,IAAI;AACjB,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,MAAM,OAAO,GAAG,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;AAC1C,6BAA6B;AAC7B,6BAA6B;AAC7B,KAAK;AACL,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;AACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;AACjB,OAAO,CAAC,GAAG,CAAC,8BAAgB,CAAC;AAC7B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC","sources":["src/list.js"],"sourcesContent":["const createNode = value => {\r\n    return {\r\n        data: value,\r\n        next: null\r\n    }\r\n}\r\n\r\n\r\nconst createList = value => {\r\n    return createNode(value)\r\n}\r\nconst appendList = (list, value) => {\r\n    const node = createNode(value)\r\n    let x = list\r\n    while (x.next) {\r\n        x = x.next\r\n    }\r\n    x.next = node\r\n    console.log(\"node\")\r\n    console.log(node)\r\n    return node\r\n}\r\nconst removeFromList = (list, node) => {\r\n    let x = list\r\n    let p = node\r\n    while (x !== node && x !== null) {\r\n        p = x\r\n        x = x.next\r\n    }\r\n    if (x === null) {\r\n        return false\r\n    } else if (x === p) {\r\n        p = x.next\r\n        return p\r\n    } else {\r\n        p.next = x.next\r\n        return list\r\n    }\r\n}\r\n\r\n// const travelList = (list, fn) => {\r\n//     let x = list\r\n//     while (x !== null) {\r\n//         fn(x)\r\n//         x = x.next\r\n//     }\r\n// }\r\n\r\n\r\n\r\nconst list = createList(10)\r\nconst node = list\r\n// const node2 = appendList(list, 20)\r\n// const node3 = appendList(list, 30)\r\n// const node4 = appendList(list, 40)\r\nconst newList = removeFromList(list, node)\r\n// travelList(list, node => {\r\n//     console.log(node.data)\r\n// })\r\nconsole.log(\"list\")\r\nconsole.log(list)\r\nconsole.log(\"删掉第一个节点newList\")\r\nconsole.log(newList)\r\n"],"names":[],"version":3,"file":"linked_list.806bafe4.js.map","sourceRoot":"/__parcel_source_root/"}